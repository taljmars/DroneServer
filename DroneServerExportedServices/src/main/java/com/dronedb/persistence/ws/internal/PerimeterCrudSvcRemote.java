
package com.dronedb.persistence.ws.internal;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import com.dronedb.persistence.scheme.ObjectFactory;
import com.dronedb.persistence.scheme.Perimeter;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PerimeterCrudSvcRemote", targetNamespace = "http://scheme.persistence.dronedb.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PerimeterCrudSvcRemote {


    /**
     * 
     * @param arg0
     * @return
     *     returns com.dronedb.persistence.scheme.Perimeter
     * @throws DatabaseValidationRemoteException
     * @throws ObjectNotFoundRemoteException
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://scheme.persistence.dronedb.com/PerimeterCrudSvcRemote/clonePerimeterRequest", output = "http://scheme.persistence.dronedb.com/PerimeterCrudSvcRemote/clonePerimeterResponse", fault = {
        @FaultAction(className = DatabaseValidationRemoteException.class, value = "http://scheme.persistence.dronedb.com/PerimeterCrudSvcRemote/clonePerimeter/Fault/DatabaseValidationRemoteException"),
        @FaultAction(className = ObjectNotFoundRemoteException.class, value = "http://scheme.persistence.dronedb.com/PerimeterCrudSvcRemote/clonePerimeter/Fault/ObjectNotFoundRemoteException")
    })
    public Perimeter clonePerimeter(
        @WebParam(name = "arg0", partName = "arg0")
        Perimeter arg0)
        throws DatabaseValidationRemoteException, ObjectNotFoundRemoteException
    ;

}
