
package com.dronedb.persistence.ws.internal;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import com.dronedb.persistence.scheme.Mission;
import com.dronedb.persistence.scheme.MissionItem;
import com.dronedb.persistence.scheme.ObjectFactory;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MissionCrudSvcRemote", targetNamespace = "http://scheme.persistence.dronedb.com/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MissionCrudSvcRemote {


    /**
     * 
     * @param arg0
     * @return
     *     returns com.dronedb.persistence.scheme.MissionItem
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/createMissionItemRequest", output = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/createMissionItemResponse")
    public MissionItem createMissionItem(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns com.dronedb.persistence.scheme.Mission
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/createMissionRequest", output = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/createMissionResponse")
    public Mission createMission();

    /**
     * 
     * @param arg0
     * @return
     *     returns com.dronedb.persistence.scheme.Mission
     * @throws DatabaseValidationRemoteException
     * @throws ObjectNotFoundRemoteException
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/cloneMissionRequest", output = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/cloneMissionResponse", fault = {
        @FaultAction(className = DatabaseValidationRemoteException.class, value = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/cloneMission/Fault/DatabaseValidationRemoteException"),
        @FaultAction(className = ObjectNotFoundRemoteException.class, value = "http://scheme.persistence.dronedb.com/MissionCrudSvcRemote/cloneMission/Fault/ObjectNotFoundRemoteException")
    })
    public Mission cloneMission(
        @WebParam(name = "arg0", partName = "arg0")
        Mission arg0)
        throws DatabaseValidationRemoteException, ObjectNotFoundRemoteException
    ;

}
